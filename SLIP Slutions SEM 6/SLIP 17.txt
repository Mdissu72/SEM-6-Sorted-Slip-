ðŸ“š Q.1 Advanced Java:
âœ… A) Java Program to Display Each Vowel from a String After 3 Seconds
VowelDisplay.java
java
Copy
Edit
import java.util.Scanner;

public class VowelDisplay {
    public static void main(String[] args) throws InterruptedException {
        Scanner scanner = new Scanner(System.in);

        // Input string from user
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();

        // Convert string to lowercase to simplify comparison
        input = input.toLowerCase();

        System.out.println("Vowels in the string will be displayed one by one:");

        // Iterate over characters and display vowels after 3 seconds
        for (int i = 0; i < input.length(); i++) {
            char ch = input.charAt(i);
            if (isVowel(ch)) {
                System.out.println(ch);
                Thread.sleep(3000); // Wait for 3 seconds before displaying the next vowel
            }
        }
        scanner.close();
    }

    // Method to check if a character is a vowel
    public static boolean isVowel(char ch) {
        return "aeiou".indexOf(ch) != -1;
    }
}
âœ… Run Instructions:
Save as VowelDisplay.java.

Compile and run:

bash
Copy
Edit
javac VowelDisplay.java
java VowelDisplay
âœ… B) Java Program to Check File Presence on Server and Display Contents
Server.java
java
Copy
Edit
import java.io.*;
import java.net.*;

public class Server {
    public static void main(String[] args) {
        try {
            // Start the server on port 5000
            ServerSocket serverSocket = new ServerSocket(5000);
            System.out.println("Server is waiting for client request...");

            // Accept connection from client
            Socket socket = serverSocket.accept();
            DataInputStream dis = new DataInputStream(socket.getInputStream());
            DataOutputStream dos = new DataOutputStream(socket.getOutputStream());

            // Receive file name from client
            String fileName = dis.readUTF();
            File file = new File(fileName);

            // Check if file exists
            if (file.exists()) {
                dos.writeUTF("File Found. Displaying content:\n");

                // Read and send file content
                BufferedReader br = new BufferedReader(new FileReader(file));
                String line;
                while ((line = br.readLine()) != null) {
                    dos.writeUTF(line);
                }
                br.close();
            } else {
                dos.writeUTF("File Not Found.");
            }

            // Close resources
            dis.close();
            dos.close();
            socket.close();
            serverSocket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
Client.java
java
Copy
Edit
import java.io.*;
import java.net.*;

public class Client {
    public static void main(String[] args) {
        try {
            // Connect to server on localhost, port 5000
            Socket socket = new Socket("localhost", 5000);

            DataInputStream dis = new DataInputStream(socket.getInputStream());
            DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

            // Get file name from user
            System.out.print("Enter the file name to check on server: ");
            String fileName = br.readLine();
            dos.writeUTF(fileName);

            // Receive and display server response
            String response;
            while ((response = dis.readUTF()) != null) {
                System.out.println(response);
            }

            // Close resources
            br.close();
            dis.close();
            dos.close();
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
âœ… Run Instructions:
Compile both files:

bash
Copy
Edit
javac Server.java
javac Client.java
Run the server first:

bash
Copy
Edit
java Server
Run the client:

bash
Copy
Edit
java Client
ðŸ“± Q.2 Android:
âœ… A) Android Application to Construct ImageSwitcher Using setFactory()
MainActivity.java
java
Copy
Edit
package com.example.imageswitcherapp;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageSwitcher;
import android.widget.ImageView;
import android.widget.ViewSwitcher;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private ImageSwitcher imageSwitcher;
    private Button nextButton;
    private int[] images = {R.drawable.image1, R.drawable.image2, R.drawable.image3};
    private int currentIndex = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imageSwitcher = findViewById(R.id.imageSwitcher);
        nextButton = findViewById(R.id.nextButton);

        // Set factory for ImageSwitcher
        imageSwitcher.setFactory(() -> {
            ImageView imageView = new ImageView(getApplicationContext());
            imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
            return imageView;
        });

        // Set initial image
        imageSwitcher.setImageResource(images[currentIndex]);

        // Button click to switch images
        nextButton.setOnClickListener(v -> {
            currentIndex = (currentIndex + 1) % images.length;
            imageSwitcher.setImageResource(images[currentIndex]);
        });
    }
}
activity_main.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageSwitcher
        android:id="@+id/imageSwitcher"
        android:layout_width="300dp"
        android:layout_height="300dp"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="50dp" />

    <Button
        android:id="@+id/nextButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Next Image"
        android:layout_below="@id/imageSwitcher"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="20dp" />
</RelativeLayout>
âœ… Run Instructions:
Place image1.png, image2.png, and image3.png in the res/drawable folder.

Run the app to switch images.

âœ… B) Android Application Demonstrating ContextMenu
MainActivity.java
java
Copy
Edit
package com.example.contextmenuapp;

import android.os.Bundle;
import android.view.ContextMenu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textView = findViewById(R.id.textView);

        // Register the TextView for context menu
        registerForContextMenu(textView);
    }

    // Create Context Menu
    @Override
    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.context_menu, menu);
    }

    // Handle Context Menu item selection
    @Override
    public boolean onContextItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.option1:
                Toast.makeText(this, "Option 1 Selected", Toast.LENGTH_SHORT).show();
                return true;
            case R.id.option2:
                Toast.makeText(this, "Option 2 Selected", Toast.LENGTH_SHORT).show();
                return true;
            case R.id.option3:
                Toast.makeText(this, "Option 3 Selected", Toast.LENGTH_SHORT).show();
                return true;
            default:
                return super.onContextItemSelected(item);
        }
    }
}
activity_main.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Long press to see context menu"
        android:textSize="18sp"
        android:layout_centerInParent="true" />
</RelativeLayout>
res/menu/context_menu.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/option1"
        android:title="Option 1" />
    <item
        android:id="@+id/option2"
        android:title="Option 2" />
    <item
        android:id="@+id/option3"
        android:title="Option 3" />
</menu>