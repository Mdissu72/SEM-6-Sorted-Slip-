✅ A) Java Program to Scroll Text from Left to Right and Vice Versa Continuously
MarqueeText.java

java
Copy
Edit
import java.awt.*;
import javax.swing.*;

public class MarqueeText extends JPanel implements Runnable {
    private String text = "  Welcome to Advanced Java!  ";
    private int x = 0, step = 2;
    private boolean movingRight = true;

    public MarqueeText() {
        Thread t = new Thread(this);
        t.start();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setFont(new Font("Arial", Font.BOLD, 24));
        g.setColor(Color.BLUE);
        g.drawString(text, x, 50);
    }

    @Override
    public void run() {
        while (true) {
            if (movingRight) {
                x += step;
                if (x > getWidth()) {
                    x = -text.length() * 10;
                }
            } else {
                x -= step;
                if (x < -text.length() * 10) {
                    x = getWidth();
                }
            }
            repaint();
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Scrolling Text");
        MarqueeText marquee = new MarqueeText();
        frame.add(marquee);
        frame.setSize(600, 150);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}                   





✅ B) Socket Program in Java for Chatting Application (Using Swing)
ChatServer.java
java
Copy
Edit
import java.io.*;
import java.net.*;
import javax.swing.*;

public class ChatServer {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Server");
        JTextArea textArea = new JTextArea(20, 40);
        textArea.setEditable(false);
        frame.add(new JScrollPane(textArea));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);

        try (ServerSocket serverSocket = new ServerSocket(12345)) {
            textArea.append("Server started. Waiting for client...\n");
            Socket socket = serverSocket.accept();
            textArea.append("Client connected.\n");

            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            String msg;
            while ((msg = in.readLine()) != null) {
                textArea.append("Client: " + msg + "\n");
                out.println("Server: " + msg);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
ChatClient.java
java
Copy
Edit
import java.io.*;
import java.net.*;
import java.awt.event.*;
import javax.swing.*;

public class ChatClient {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Client");
        JTextArea textArea = new JTextArea(20, 40);
        JTextField textField = new JTextField(40);
        JButton sendButton = new JButton("Send");

        frame.add(new JScrollPane(textArea), "Center");
        frame.add(textField, "North");
        frame.add(sendButton, "South");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);

        try (Socket socket = new Socket("localhost", 12345)) {
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            sendButton.addActionListener(e -> {
                String msg = textField.getText();
                out.println(msg);
                textField.setText("");
            });

            String serverMsg;
            while ((serverMsg = in.readLine()) != null) {
                textArea.append(serverMsg + "\n");
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}






 Q.2 Android:
✅ A) Simple Application Sending "Hello" Message Using Intent
MainActivity.java
java
Copy
Edit
package com.example.hellosender;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    Button sendBtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        sendBtn = findViewById(R.id.sendBtn);
        sendBtn.setOnClickListener(v -> {
            Intent intent = new Intent(MainActivity.this, SecondActivity.class);
            intent.putExtra("message", "Hello");
            startActivity(intent);
        });
    }
}
SecondActivity.java
java
Copy
Edit
package com.example.hellosender;

import android.os.Bundle;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class SecondActivity extends AppCompatActivity {
    TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);

        textView = findViewById(R.id.textView);
        String msg = getIntent().getStringExtra("message");
        textView.setText(msg);
    }
}
activity_main.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <Button
        android:id="@+id/sendBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Send Hello"
        android:layout_centerInParent="true"/>
</RelativeLayout>
activity_second.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Message Received"
        android:textSize="20sp"
        android:layout_centerInParent="true"/>
</RelativeLayout>





✅ B) Android Application Demonstrating Progress Dialog Box Using AsyncTask
MainActivity.java
java
Copy
Edit
package com.example.progressdialog;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    Button startBtn;
    ProgressDialog progressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        startBtn = findViewById(R.id.startBtn);
        startBtn.setOnClickListener(v -> new DownloadTask().execute());
    }

    private class DownloadTask extends AsyncTask<Void, Integer, String> {
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressDialog = new ProgressDialog(MainActivity.this);
            progressDialog.setMessage("Downloading...");
            progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            progressDialog.setCancelable(false);
            progressDialog.show();
        }

        @Override
        protected String doInBackground(Void... params) {
            for (int i = 0; i <= 100; i += 10) {
                try {
                    Thread.sleep(500);
                    publishProgress(i);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            return "Download Complete";
        }

        @Override
        protected void onProgressUpdate(Integer... values) {
            super.onProgressUpdate(values);
            progressDialog.setProgress(values[0]);
        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            progressDialog.dismiss();
            Toast.makeText(MainActivity.this, result, Toast.LENGTH_SHORT).show();
        }
    }
}
activity_main.xml
xml
Copy
Edit
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <Button
        android:id="@+id/startBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Start Download"
        android:layout_centerInParent="true"/>
</RelativeLayout>